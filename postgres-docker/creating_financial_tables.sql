--------------------------------------------------
-- 01. Tipo de movimento
--------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_type_of_movement(
    customer_id BIGINT NOT NULL,
    enterprise_id INT NOT NULL,
    type_movement_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type_movement_name VARCHAR(50) NOT NULL,
    PRIMARY KEY (customer_id, enterprise_id, type_movement_id),
    CONSTRAINT fk_enterprise_movement
        FOREIGN KEY (customer_id, enterprise_id)
            REFERENCES tb_enterprise(customer_id, enterprise_id),
    CONSTRAINT uq_tb_type_of_movement
        UNIQUE (customer_id, enterprise_id, type_movement_name)
);

--------------------------------------------------
-- 02. Contas a receber
--------------------------------------------------
CREATE TABLE IF NOT EXISTS tb_accounts_receivable
(
    customer_id BIGINT NOT NULL,
    enterprise_id INT NOT NULL,
    account_recive_id  INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(200) NULL,
    client_id BIGINT NULL,
    value_receivable NUMERIC(10,2) NOT NULL,
    type_movement_id INT NOT NULL,
    status varchar (10) not null,
    PRIMARY KEY (customer_id,enterprise_id, account_recive_id),
    CONSTRAINT fk_account_enterprise
        FOREIGN KEY (customer_id, enterprise_id)
            REFERENCES tb_enterprise(customer_id, enterprise_id),
    CONSTRAINT fk_account_client
        FOREIGN KEY (customer_id, enterprise_id, client_id)
            REFERENCES tb_client(customer_id, enterprise_id, client_id),
    CONSTRAINT fk_type_of_movement
        FOREIGN KEY (customer_id,enterprise_id, type_movement_id)
            REFERENCES tb_type_of_movement(customer_id,enterprise_id, type_movement_id)
);

--------------------------------------------------
-- 03. Contas a pagar
--------------------------------------------------
-- CREATE TABLE IF NOT EXISTS tb_accounts_payable
-- (
--     customer_id BIGINT NOT NULL,
--     enterprise_id INT NOT NULL
-- );